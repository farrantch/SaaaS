{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template for CloudAccountDbScanner Lambda.",
  "Parameters": {
    "Environment": {
      "Type": "String",
      "Default": "Dev"
    },
    "StackIdentifier": {
      "Type": "String",
      "Default": "1"
    },
    "S3BucketName": {
      "Type": "String"
    },
    "S3ObjectKey": {
      "Type": "String"
    },
    "DynamoDbScanSize": {
      "Type": "String",
      "Default": "10"
    },
    "DistributionBatchSize": {
      "Type": "String",
      "Default": "1000"
    }
  },
  "Resources": {
    "IamPolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
              "Effect": "Allow",
              "Action": ["logs:*"],
              "Resource": "arn:aws:logs:*:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Scan*"
              ],
              "Resource": [{
                "Fn::Sub": [ "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDbTableName}", { "DynamoDbTableName": { "Fn::ImportValue": { "Fn::Sub": "Saaas-DynamoDbTableName-CloudAccounts-${Environment}-1" }}}]
                }]
            },
            {
              "Effect": "Allow",
              "Action": [
                "lambda:InvokeFunction"
              ],
              "Resource": [
                {
                  "Fn::ImportValue": { "Fn::Sub": "Saaas-LambdaArn-CloudAccountDistributer-${Environment}-1" }
                }
              ]
            }
          ]
        }
      }
    },
    "IamRole": {
      "DependsOn": "IamPolicy",
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {
              "Service": "lambda.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }]
        },
        "ManagedPolicyArns": [{
          "Ref": "IamPolicy"
        }]
      }
    },
    "Lambda": {
      "DependsOn": ["IamRole"],
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "S3BucketName"
          },
          "S3Key": {
            "Ref": "S3ObjectKey"
          }
        },
        "Handler": "CloudAccountDbScanner.lambda_handler",
        "Role": {
          "Fn::GetAtt": ["IamRole", "Arn"]
        },
        "Runtime": "python3.6",
        "Timeout": "300",
        "Environment": {
          "Variables": {
            "DynamoDbTableNameCloudAccounts": {
              "Fn::ImportValue": {
                "Fn::Sub": "Saaas-DynamoDbTableName-CloudAccounts-${Environment}-1"
              }
            },
            "LambdaArnCloudAccountDistributer": {
              "Fn::ImportValue": {
                "Fn::Sub": "Saaas-LambdaArn-CloudAccountDistributer-${Environment}-1"
              }
            },
            "DynamoDbScanSize": {
                "Ref": "DynamoDbScanSize"
            },
            "DistributionBatchSize": {
              "Ref": "DistributionBatchSize"
            }
          }
        },
        "Description": "Scans CloudAccounts table and innvokes configured lambda functions."
      }
    },
    "Event": {
      "DependsOn": "Lambda",
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Scheduled trigger for DbScanner lambda function.",
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [{
          "Id": "1",
          "Arn": {
            "Fn::GetAtt": [
              "Lambda",
              "Arn"
            ]
          }
        }]
      }
    },
    "LambdaPermission": {
      "DependsOn": "Event",
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Lambda",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "Event",
            "Arn"
          ]
        }
      }
    }
  },
  "Outputs": {}
}